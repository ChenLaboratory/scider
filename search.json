[{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"A quick start guide to the scider package","text":"development version scider can installed GitHub:","code":"if (!require(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"scider\") devtools::install_github(\"ChenLaboratory/scider\")"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"A quick start guide to the scider package","text":"","code":"library(scider) library(SpatialExperiment)"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"A quick start guide to the scider package","text":"vignette, use subset Xenium Breast Cancer dataset. data, quantification 541 genes 10000 cells. also cell-type annotations cells, 4 cell types. can use function plotSpatial visualise cell position color cells cell types.","code":"data(\"xenium_bc_spe\") spe ## class: SpatialExperiment  ## dim: 541 10000  ## metadata(0): ## assays(1): counts ## rownames(541): ENSG00000121270 ENSG00000213088 ... BLANK_0444 ##   BLANK_0447 ## rowData names(3): ID Symbol Type ## colnames(10000): cell_212124 cell_120108 ... cell_252054 cell_568560 ## colData names(21): cell_id transcript_counts ... cell_type sample_id ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0): ## spatialCoords names(2) : x_centroid y_centroid ## imgData names(1): sample_id table(colData(spe)$cell_type) ##  ##       B cells Breast cancer   Fibroblasts       T cells  ##           643          3550          4234          1573 plotSpatial(spe, color = cell_type, alpha = 0.8)"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"grid-based-analysis","dir":"Articles","previous_headings":"","what":"Grid-based analysis","title":"A quick start guide to the scider package","text":"scider can conduct grid-based density analysis spatial transcriptomics data.","code":""},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"density-calculation","dir":"Articles","previous_headings":"Grid-based analysis","what":"Density calculation","title":"A quick start guide to the scider package","text":"calculating density, need define cell type--interest (COI). case, cell types COIs. can perform density calculation COI using function gridDensity. calculated density grid information saved metadata SpatialExperimnet object. can visualise density COI using function plotDensity.","code":"coi <- unique(colData(spe)$cell_type) coi ## [1] \"Fibroblasts\"   \"Breast cancer\" \"T cells\"       \"B cells\" spe <- gridDensity(spe, coi = coi)  names(metadata(spe)) ## [1] \"grid_density\" \"grid_info\" metadata(spe)$grid_density ## DataFrame with 11400 rows and 9 columns ##          x_grid    y_grid    node_x    node_y        node density_fibroblasts ##       <numeric> <numeric> <integer> <integer> <character>           <numeric> ## 1       329.102   203.852         1         1         1-1          0.00352639 ## 2       329.102   299.810         1         2         1-2          0.00432724 ## 3       329.102   395.767         1         3         1-3          0.00526027 ## 4       329.102   491.725         1         4         1-4          0.00633438 ## 5       329.102   587.683         1         5         1-5          0.00755759 ## ...         ...       ...       ...       ...         ...                 ... ## 11396   9865.73   10663.2       100       110     100-110          0.00743260 ## 11397   9865.73   10759.2       100       111     100-111          0.00601659 ## 11398   9865.73   10855.2       100       112     100-112          0.00482908 ## 11399   9865.73   10951.1       100       113     100-113          0.00384286 ## 11400   9865.73   11047.1       100       114     100-114          0.00303176 ##       density_breast_cancer density_t_cells density_b_cells ##                   <numeric>       <numeric>       <numeric> ## 1               0.000124482      0.00200091      0.00308062 ## 2               0.000158866      0.00269403      0.00447254 ## 3               0.000207521      0.00360691      0.00639036 ## 4               0.000278528      0.00478231      0.00893371 ## 5               0.000385603      0.00624991      0.01215386 ## ...                     ...             ...             ... ## 11396            0.00992645     1.85862e-05     0.000385502 ## 11397            0.00715312     9.95949e-06     0.000337516 ## 11398            0.00504125     5.53001e-06     0.000288967 ## 11399            0.00348873     3.29144e-06     0.000242472 ## 11400            0.00237981     2.14802e-06     0.000199856 plotDensity(spe, coi = coi[1])"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"find-regions-of-interest-rois","dir":"Articles","previous_headings":"Grid-based analysis","what":"Find Regions-of-interest (ROIs)","title":"A quick start guide to the scider package","text":"obtaining grid-based density COI, can detect regions--interest (ROIs) based density select user.","code":""},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"detected-by-algorithm","dir":"Articles","previous_headings":"Grid-based analysis > Find Regions-of-interest (ROIs)","what":"Detected by algorithm","title":"A quick start guide to the scider package","text":"detect ROIs automatically, can use function findROI. detected ROIs saved metadata SpatialExperiment object. can visualise ROIs function plotROI.","code":"spe <- findROI(spe, coi = coi)  metadata(spe)$roi ## DataFrame with 1464 rows and 6 columns ##      component     members           x           y    xcoord    ycoord ##       <factor> <character> <character> <character> <numeric> <numeric> ## 1            1      83-107          83         107   8228.13  10375.37 ## 2            1      83-108          83         108   8228.13  10471.33 ## 3            1      84-107          84         107   8324.46  10375.37 ## 4            1      84-108          84         108   8324.46  10471.33 ## 5            1      85-102          85         102   8420.79   9895.58 ## ...        ...         ...         ...         ...       ...       ... ## 1460        29      53-104          53         104   5338.24   10087.5 ## 1461        29      53-105          53         105   5338.24   10183.5 ## 1462        29      53-106          53         106   5338.24   10279.4 ## 1463        29      54-105          54         105   5434.57   10183.5 ## 1464        29      54-106          54         106   5434.57   10279.4 plotROI(spe)"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"select-roi-by-user","dir":"Articles","previous_headings":"Grid-based analysis > Find Regions-of-interest (ROIs)","what":"Select ROI by user","title":"A quick start guide to the scider package","text":"Alternatively, users can select ROIs based research interest (drawn hand). can done using function selectRegion. function open interactive window interactive plot users zoom-/-select ROI using either rectangular lasso selection tool. Users can also press Export selected points button save ROIs object R environment. closing interactive window, selected ROI saved data.frame object named sel_region R environment. can use postSelRegion save ROI metadata SpatialExperiment object. Similarly, can plot visualise user-defined ROI function plotROI.","code":"selectRegion(metadata(spe)$grid_density, x.col = \"x_grid\", y.col = \"y_grid\") sel_region spe1 <- postSelRegion(spe, sel_region = sel_region)  metadata(spe1)$roi plotROI(spe1)"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"testing-relationship-between-cell-types","dir":"Articles","previous_headings":"Grid-based analysis","what":"Testing relationship between cell types","title":"A quick start guide to the scider package","text":"defining ROIs, can test relationship two cell types within ROI overall account ROI variation using cubic spline linear fit. can done function corrDensity, setting celltype1 celltype2 parameters, modelling results saved metadata SpatialExperiment object. can see correlation breast cancer fibroblasts ROI. can also visualise fitting using function plotDensCor.  , can visualise statistics cell types using function plotModStat heatmap.","code":"model_result <- corDensity(spe) model_result ## DataFrame with 174 rows and 9 columns ##       celltype1     celltype2         ROI     ngrid   cor.coef          t ##     <character>   <character> <character> <numeric>  <numeric>  <numeric> ## 1   Fibroblasts Breast cancer           1        25 -0.4212512  -2.227535 ## 2   Fibroblasts Breast cancer           2       106 -0.5961093  -7.571454 ## 3   Fibroblasts Breast cancer           3        27 -0.9058793 -10.694243 ## 4   Fibroblasts Breast cancer           4        42 -0.9245825 -15.348691 ## 5   Fibroblasts Breast cancer           5        36 -0.0392948  -0.229303 ## ...         ...           ...         ...       ...        ...        ... ## 170     T cells       B cells          25        25   0.459082   2.478267 ## 171     T cells       B cells          26        29   0.865404   8.974262 ## 172     T cells       B cells          27        21  -0.248482  -1.118180 ## 173     T cells       B cells          28        38   0.628826   4.852386 ## 174     T cells       B cells          29        22   0.110237   0.496019 ##            df       p.Pos       p.Neg ##     <numeric>   <numeric>   <numeric> ## 1          23    0.982010 1.79903e-02 ## 2         104    1.000000 7.83173e-12 ## 3          25    1.000000 4.06755e-11 ## 4          40    1.000000 1.16320e-18 ## 5          34    0.589996 4.10004e-01 ## ...       ...         ...         ... ## 170        23 1.04871e-02    0.989513 ## 171        27 6.86205e-10    1.000000 ## 172        19 8.61285e-01    0.138715 ## 173        36 1.17842e-05    0.999988 ## 174        20 3.12644e-01    0.687356 plotDensCor(spe, celltype1 = \"Breast cancer\", celltype2 = \"Fibroblasts\") plotCorHeatmap(model_result) model_result2 <- corDensity(spe, by.roi = FALSE)  plotCorHeatmap(model_result2)"},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"cell-based-analysis","dir":"Articles","previous_headings":"","what":"Cell-based analysis","title":"A quick start guide to the scider package","text":"Based grid density, can ask many biological question data. example, like know certain cell type located high density breast cancer cells different cell type different level breast cancer region.","code":""},{"path":"https://chenlaboratory.github.io/scider/articles/scider_userGuide.html","id":"cell-annotation-based-on-grid-density","dir":"Articles","previous_headings":"Cell-based analysis","what":"cell annotation based on grid density","title":"A quick start guide to the scider package","text":"address question, first need divide cells different levels grid density. can done using contour identification strategy function getContour. Different level contour can visualised cells using plotContour.  can annotate cells locations within contour using function allocateCells.  can visualise cell type composition per level.","code":"spe <- getContour(spe, coi = \"Breast cancer\") plotContour(spe, coi = \"Breast cancer\") spe <- allocateCells(spe) plotSpatial(spe, color = breast_cancer_contour, alpha = 0.5) plotCellCompo(spe, coi = \"Breast cancer\") plotCellCompo(spe, coi = \"Breast cancer\", by.roi = TRUE) sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] sf_1.0-14                   SpatialExperiment_1.10.0    ##  [3] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 ##  [5] Biobase_2.60.0              GenomicRanges_1.52.1        ##  [7] GenomeInfoDb_1.36.4         IRanges_2.34.1              ##  [9] S4Vectors_0.38.2            BiocGenerics_0.46.0         ## [11] MatrixGenerics_1.12.3       matrixStats_1.0.0           ## [13] scider_0.99.1               ggplot2_3.4.4               ##  ## loaded via a namespace (and not attached): ##   [1] RColorBrewer_1.1-3        jsonlite_1.8.7            ##   [3] magrittr_2.0.3            spatstat.utils_3.0-3      ##   [5] magick_2.8.1              farver_2.1.1              ##   [7] rmarkdown_2.25            fs_1.6.3                  ##   [9] zlibbioc_1.46.0           ragg_1.2.6                ##  [11] vctrs_0.6.4               memoise_2.0.1             ##  [13] spatstat.explore_3.2-5    DelayedMatrixStats_1.22.6 ##  [15] RCurl_1.98-1.12           janitor_2.2.0             ##  [17] htmltools_0.5.6.1         S4Arrays_1.0.6            ##  [19] Rhdf5lib_1.22.1           rhdf5_2.44.0              ##  [21] sass_0.4.7                KernSmooth_2.23-21        ##  [23] bslib_0.5.1               htmlwidgets_1.6.2         ##  [25] desc_1.4.2                plotly_4.10.3             ##  [27] lubridate_1.9.3           cachem_1.0.8              ##  [29] igraph_1.5.1              mime_0.12                 ##  [31] lifecycle_1.0.3           pkgconfig_2.0.3           ##  [33] Matrix_1.5-4.1            R6_2.5.1                  ##  [35] fastmap_1.1.1             GenomeInfoDbData_1.2.10   ##  [37] shiny_1.7.5.1             snakecase_0.11.1          ##  [39] digest_0.6.33             colorspace_2.1-0          ##  [41] rprojroot_2.0.3           tensor_1.5                ##  [43] dqrng_0.3.1               textshaping_0.3.7         ##  [45] beachmat_2.16.0           lwgeom_0.2-13             ##  [47] labeling_0.4.3            fansi_1.0.5               ##  [49] spatstat.sparse_3.0-2     timechange_0.2.0          ##  [51] mgcv_1.8-42               httr_1.4.7                ##  [53] polyclip_1.10-6           abind_1.4-5               ##  [55] compiler_4.3.1            proxy_0.4-27              ##  [57] withr_2.5.1               BiocParallel_1.34.2       ##  [59] DBI_1.1.3                 HDF5Array_1.28.1          ##  [61] R.utils_2.12.2            DelayedArray_0.26.7       ##  [63] classInt_0.4-10           rjson_0.2.21              ##  [65] units_0.8-4               tools_4.3.1               ##  [67] httpuv_1.6.12             goftest_1.2-3             ##  [69] R.oo_1.25.0               glue_1.6.2                ##  [71] nlme_3.1-162              rhdf5filters_1.12.1       ##  [73] promises_1.2.1            grid_4.3.1                ##  [75] generics_0.1.3            isoband_0.2.7             ##  [77] gtable_0.3.4              spatstat.data_3.0-1       ##  [79] class_7.3-22              R.methodsS3_1.8.2         ##  [81] tidyr_1.3.0               data.table_1.14.8         ##  [83] utf8_1.2.4                XVector_0.40.0            ##  [85] spatstat.geom_3.2-7       pillar_1.9.0              ##  [87] stringr_1.5.0             limma_3.56.2              ##  [89] later_1.3.1               splines_4.3.1             ##  [91] dplyr_1.1.3               lattice_0.21-8            ##  [93] deldir_1.0-9              tidyselect_1.2.0          ##  [95] locfit_1.5-9.8            scuttle_1.10.3            ##  [97] knitr_1.44                edgeR_3.42.4              ##  [99] xfun_0.40                 DropletUtils_1.20.0       ## [101] pheatmap_1.0.12           stringi_1.7.12            ## [103] lazyeval_0.2.2            yaml_2.3.7                ## [105] evaluate_0.22             codetools_0.2-19          ## [107] tibble_3.2.1              cli_3.6.1                 ## [109] xtable_1.8-4              systemfonts_1.0.5         ## [111] munsell_0.5.0             jquerylib_0.1.4           ## [113] Rcpp_1.0.11               spatstat.random_3.2-1     ## [115] parallel_4.3.1            ellipsis_0.3.2            ## [117] pkgdown_2.0.7             sparseMatrixStats_1.12.2  ## [119] bitops_1.0-7              viridisLite_0.4.2         ## [121] e1071_1.7-13              scales_1.2.1              ## [123] purrr_1.0.2               crayon_1.5.2              ## [125] rlang_1.1.1"},{"path":"https://chenlaboratory.github.io/scider/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ning Liu. Author. Mengbo Li. Author. Yunshun Chen. Author, maintainer.","code":""},{"path":"https://chenlaboratory.github.io/scider/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liu N, Li M, Chen Y (2023). scider: Spatial cell-type inter-correlation density R. https://github.com/ChenLaboratory/scider, https://chenlaboratory.github.io/scider/.","code":"@Manual{,   title = {scider: Spatial cell-type inter-correlation by density in R},   author = {Ning Liu and Mengbo Li and Yunshun Chen},   year = {2023},   note = {https://github.com/ChenLaboratory/scider, https://chenlaboratory.github.io/scider/}, }"},{"path":"https://chenlaboratory.github.io/scider/index.html","id":"scider-spatial-cell-type-inter-correlation-by-density-in-r-","dir":"","previous_headings":"","what":"Spatial cell-type inter-correlation by density in R","title":"Spatial cell-type inter-correlation by density in R","text":"scider implements functions analyse spatial transcriptomics data cell type annotations performing cell type correlation via density estimation cell type co-localization via real number distance. Functions include density estimation, statistical modelling visualizations. Install released version form Bioconductor Install development version GitHub","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"scider\") library(devtools)    devtools::install_github(\"ChenLaboratory/scider\")"},{"path":"https://chenlaboratory.github.io/scider/reference/allocateCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate all cells with contour level of cell type-specific density. — allocateCells","title":"Annotate all cells with contour level of cell type-specific density. — allocateCells","text":"Annotate cells contour level cell type-specific density.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/allocateCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate all cells with contour level of cell type-specific density. — allocateCells","text":"","code":"allocateCells(spe, to.roi = TRUE, to.contour = TRUE)"},{"path":"https://chenlaboratory.github.io/scider/reference/allocateCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate all cells with contour level of cell type-specific density. — allocateCells","text":"spe SpatialExperiment object. .roi Logical. Whether allocate cells ROIs. .contour Logical. Whether allocate cells contour levels.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/allocateCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate all cells with contour level of cell type-specific density. — allocateCells","text":"SpatialExperiment object. extra column added colData.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/allocateCells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate all cells with contour level of cell type-specific density. — allocateCells","text":"","code":"data(\"xenium_bc_spe\")  spe <- gridDensity(spe)  coi <- \"Breast cancer\"  spe <- findROI(spe, coi = coi)  spe <- allocateCells(spe) #> Assigning cells to ROIs defined by Breast cancer  #> No contour detected."},{"path":"https://chenlaboratory.github.io/scider/reference/cellsInRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"Check which cells are in which regions — cellsInRegion","title":"Check which cells are in which regions — cellsInRegion","text":"Check cells regions","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/cellsInRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check which cells are in which regions — cellsInRegion","text":"","code":"cellsInRegion(spe, region, name_to, NA_level = \"0\", levels = NULL)"},{"path":"https://chenlaboratory.github.io/scider/reference/cellsInRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check which cells are in which regions — cellsInRegion","text":"spe SpatialExperiment object. region List sf object represents region ROI. name_to Colname colData(spe) store annotation. NA_level Label cells falling regions. Default 0. levels Factor levels.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/cellsInRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check which cells are in which regions — cellsInRegion","text":"SpatialExperiment object. region information cell stored colData.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/computeDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform kernel density estimation on SpatialExperiment — computeDensity","title":"Perform kernel density estimation on SpatialExperiment — computeDensity","text":"Perform kernel density estimation SpatialExperiment","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/computeDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform kernel density estimation on SpatialExperiment — computeDensity","text":"","code":"computeDensity(   spe,   mode = \"pixels\",   kernel = \"gaussian\",   bandwidth = NULL,   weights = NULL,   ngrid.x = 100,   ngrid.y = NULL,   grid.length.x = NULL,   grid.length.y = NULL,   xlim = NULL,   ylim = NULL,   diggle = FALSE )"},{"path":"https://chenlaboratory.github.io/scider/reference/computeDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform kernel density estimation on SpatialExperiment — computeDensity","text":"spe SpatialExperiment object. mode Choose either points pixels. Specifying whether compute density grid pixel location point. kernel smoothing kernel. Options gaussian, epanechnikov, quartic disc. bandwidth smoothing bandwidth. default performing automatic bandwidth selection using cross-validation using function spatstat.explore::bw.diggle. weights Optional weights attached points. ngrid.x Number grids x-direction. Default 100. ngrid.y Number grids y-direction. grid.length.x Grid length x-direction. grid.length.y Grid length y-direction. xlim range x-coordinates image. ylim range y-coordinates image. diggle Logical. TRUE, use Jones-Diggle improved edge correction. See spatstat.explore::density.ppp() details.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/computeDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform kernel density estimation on SpatialExperiment — computeDensity","text":"Output spatstat.explore::density.ppp.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/contour2sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a contour region on some density level — contour2sf","title":"Draw a contour region on some density level — contour2sf","text":"Draw contour region density level","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/contour2sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a contour region on some density level — contour2sf","text":"","code":"contour2sf(spe, contour, coi, cutoff)"},{"path":"https://chenlaboratory.github.io/scider/reference/contour2sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a contour region on some density level — contour2sf","text":"spe SpatialExperiment object. contour Name metadata. coi character vector cell types interest (COIs). cutoff numeric scalar specifying density cutoff.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/contour2sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a contour region on some density level — contour2sf","text":"sf object contour region specified level.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/corDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for density correlation between two cell types. — corDensity","title":"Test for density correlation between two cell types. — corDensity","text":"Test density correlation two cell types.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/corDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for density correlation between two cell types. — corDensity","text":"","code":"corDensity(spe, by.roi = TRUE)"},{"path":"https://chenlaboratory.github.io/scider/reference/corDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for density correlation between two cell types. — corDensity","text":"spe SpatialExperiment object. .roi Logical. TRUE (default), return testing results ROI level. FALSE, combine testing results across ROIs.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/corDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for density correlation between two cell types. — corDensity","text":"DataFrame containing testing results.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/corDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for density correlation between two cell types. — corDensity","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\", \"B cells\", \"T cells\")  spe <- gridDensity(spe, coi = coi)  spe <- findROI(spe, coi = coi, method = \"walktrap\")  result <- corDensity(spe)"},{"path":"https://chenlaboratory.github.io/scider/reference/findROI.html","id":null,"dir":"Reference","previous_headings":"","what":"Find ROIs based on cell type-specific densities via graph-based method. — findROI","title":"Find ROIs based on cell type-specific densities via graph-based method. — findROI","text":"Find ROIs based cell type-specific densities via graph-based method.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/findROI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find ROIs based on cell type-specific densities via graph-based method. — findROI","text":"","code":"findROI(   spe,   coi,   probs = 0.85,   ngrid.min = 20,   method = \"walktrap\",   diag.nodes = FALSE,   sequential.roi.name = TRUE,   ... )"},{"path":"https://chenlaboratory.github.io/scider/reference/findROI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find ROIs based on cell type-specific densities via graph-based method. — findROI","text":"spe SpatialExperiment object. coi character vector cell types interest (COIs). probs numeric scalar. threshold proportion used filter grid density. Default 0.85. ngrid.min integer. minimum number grids required defining ROI. Default 20. method community dectection method used, either walktrap connected. Default walktrap. diag.nodes Logical. Set TRUE allow diagonal grid points adjacent nodes. sequential.roi.name Logical. Set FALSE want original ROI name filtering retained. ... parameters passed walktrap.community.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/findROI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find ROIs based on cell type-specific densities via graph-based method. — findROI","text":"SpatialExperiment object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/findROI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find ROIs based on cell type-specific densities via graph-based method. — findROI","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\")  spe <- gridDensity(spe, coi = coi)  spe <- findROI(spe, coi = coi, method = \"walktrap\")"},{"path":"https://chenlaboratory.github.io/scider/reference/getContour.html","id":null,"dir":"Reference","previous_headings":"","what":"Get contour from density — getContour","title":"Get contour from density — getContour","text":"Get contour density","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/getContour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get contour from density — getContour","text":"","code":"getContour(spe, coi, bins = NULL, binwidth = NULL, breaks = NULL)"},{"path":"https://chenlaboratory.github.io/scider/reference/getContour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get contour from density — getContour","text":"spe SpatialExperiment object. coi character vector cell types interest (COIs). bins integer. Number contour levels. binwidth numeric scale smoothing bandwidth. breaks numeric scale referring breaks ggplot2:::contour_breaks.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/getContour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get contour from density — getContour","text":"SpatialExperiment object. sf object contour region specified level stored metadata SpatialExperiment object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/getContour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get contour from density — getContour","text":"","code":"data(\"xenium_bc_spe\")  spe <- gridDensity(spe)  coi <- \"Breast cancer\"  spe <- getContour(spe, coi = coi) #> Using bins = 10 to draw contours."},{"path":"https://chenlaboratory.github.io/scider/reference/getContourRegions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate areas between every two density levels — getContourRegions","title":"Calculate areas between every two density levels — getContourRegions","text":"Calculate areas every two density levels","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/getContourRegions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate areas between every two density levels — getContourRegions","text":"","code":"getContourRegions(spe, coi)"},{"path":"https://chenlaboratory.github.io/scider/reference/getContourRegions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate areas between every two density levels — getContourRegions","text":"spe SpatialExperiment object. coi character vector cell types interest (COIs).","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/getContourRegions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate areas between every two density levels — getContourRegions","text":"list sf objects, representing region two contour density levels.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/grid2sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine grids in each ROI to a sf region — grid2sf","title":"Combine grids in each ROI to a sf region — grid2sf","text":"Combine grids ROI sf region","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/grid2sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine grids in each ROI to a sf region — grid2sf","text":"","code":"grid2sf(spe)"},{"path":"https://chenlaboratory.github.io/scider/reference/grid2sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine grids in each ROI to a sf region — grid2sf","text":"spe SpatialExperiment object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/grid2sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine grids in each ROI to a sf region — grid2sf","text":"List ROIs saved sf objects.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/gridDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform kernel density estimation on SpatialExperiment for\ncell types of interest — gridDensity","title":"Perform kernel density estimation on SpatialExperiment for\ncell types of interest — gridDensity","text":"Perform kernel density estimation SpatialExperiment cell types interest","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/gridDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform kernel density estimation on SpatialExperiment for\ncell types of interest — gridDensity","text":"","code":"gridDensity(   spe,   coi = NULL,   id = \"cell_type\",   kernel = \"gaussian\",   bandwidth = NULL,   ngrid.x = 100,   ngrid.y = NULL,   grid.length.x = NULL,   grid.length.y = NULL,   diggle = FALSE )"},{"path":"https://chenlaboratory.github.io/scider/reference/gridDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform kernel density estimation on SpatialExperiment for\ncell types of interest — gridDensity","text":"spe SpatialExperiment object. coi character vector cell types interest (COIs). Default cell types. id character. name column colData(spe) containing cell type identifiers. Set cell_type default. kernel smoothing kernel. Options \"gaussian\", \"epanechnikov\", \"quartic\" \"disc\". bandwidth smoothing bandwidth. default performing automatic bandwidth selection using cross-validation using function spatstat.explore::bw.diggle. ngrid.x Number grids x-direction. Default 100. ngrid.y Number grids y-direction. grid.length.x Grid length x-direction. grid.length.y Grid length y-direction. diggle Logical. TRUE, use Jones-Diggle improved edge correction. See spatstat.explore::density.ppp() details.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/gridDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform kernel density estimation on SpatialExperiment for\ncell types of interest — gridDensity","text":"SpatialExperiment object. Grid density estimates cell type interest stored spe@metadata$grid_density. Grid information stored spe@metadata$grid_info","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/gridDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform kernel density estimation on SpatialExperiment for\ncell types of interest — gridDensity","text":"","code":"data(\"xenium_bc_spe\")  spe <- gridDensity(spe)"},{"path":"https://chenlaboratory.github.io/scider/reference/mergeROI.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually merge ROIs — mergeROI","title":"Manually merge ROIs — mergeROI","text":"Manually merge ROIs","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/mergeROI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually merge ROIs — mergeROI","text":"","code":"mergeROI(spe, merge.list, id = \"component\", rename = FALSE)"},{"path":"https://chenlaboratory.github.io/scider/reference/mergeROI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually merge ROIs — mergeROI","text":"spe SpatialExperiment object. merge.list (named) list vectors ROI ids merged. vector list length greater equal 2. name specified, merged ROI named concatenating ROIs merged. id Character. name column spe@metadata$roi stores ROIs merged. Default \"component\". rename Logical. TRUE, names merge.list ignored. ROIs given new name. unmerged ROIs, new names necessarily merging.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/mergeROI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually merge ROIs — mergeROI","text":"SpatialExperiment object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/mergeROI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually merge ROIs — mergeROI","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\")  spe <- gridDensity(spe, coi = coi)  spe <- findROI(spe, coi = coi, method = \"walktrap\")  spe <- mergeROI(spe, list(\"1-2\" = 1:2))"},{"path":"https://chenlaboratory.github.io/scider/reference/plotCellCompo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cell type composition in each density level of cell of interest. — plotCellCompo","title":"Plot cell type composition in each density level of cell of interest. — plotCellCompo","text":"Plot cell type composition density level cell interest.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCellCompo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cell type composition in each density level of cell of interest. — plotCellCompo","text":"","code":"plotCellCompo(   spe,   coi,   id = \"cell_type\",   level.name = paste0(janitor::make_clean_names(coi), \"_contour\"),   by.roi = FALSE )"},{"path":"https://chenlaboratory.github.io/scider/reference/plotCellCompo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cell type composition in each density level of cell of interest. — plotCellCompo","text":"spe SpatialExperiment object. coi character vector cell types interest (COIs). id character. name column colData(spe) containing cell type identifiers. Set cell_type default. level.name column name generated cellAssign. .roi Logical. Default FALSE, set TRUE allow plotting ROI.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCellCompo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cell type composition in each density level of cell of interest. — plotCellCompo","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCellCompo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cell type composition in each density level of cell of interest. — plotCellCompo","text":"","code":"data(\"xenium_bc_spe\") spe <- gridDensity(spe, coi = c(\"Breast cancer\", \"Fibroblasts\")) spe <- findROI(spe, coi = c(\"Breast cancer\", \"Fibroblasts\")) spe <- getContour(spe, coi = \"Breast cancer\") #> Using bins = 10 to draw contours. spe <- allocateCells(spe) #> Assigning cells to ROIs defined by Breast cancer, Fibroblasts  #> Assigning cells to contour levels of Breast cancer  #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE plotCellCompo(spe, coi = \"Breast cancer\")  plotCellCompo(spe, coi = \"Breast cancer\", by.roi = TRUE)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotContour.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot contour lines. — plotContour","title":"Plot contour lines. — plotContour","text":"Plot contour lines.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotContour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot contour lines. — plotContour","text":"","code":"plotContour(   spe,   coi,   overlay = c(\"cell\", \"density\"),   id = \"cell_type\",   sub.level = NULL,   ... )"},{"path":"https://chenlaboratory.github.io/scider/reference/plotContour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot contour lines. — plotContour","text":"spe SpatialExperiment object. coi character vector length 1 cell type interest. overlay Character vector. Either plot overlay density cell. default cell. id character. name column colData(spe) containing cell type identifiers. Set cell_type default. sub.level Character vector. Subset specific level. ... Aesthetic mappings pass ggplot2::aes_string().","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotContour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot contour lines. — plotContour","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotContour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot contour lines. — plotContour","text":"","code":"data(\"xenium_bc_spe\")  spe <- gridDensity(spe)  coi <- \"Breast cancer\"  spe <- getContour(spe, coi = coi) #> Using bins = 10 to draw contours.  plotContour(spe, coi = coi, size = 0.3, alpha = 0.2)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotContourRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualising an sf object (for internal use only at the moment) — plotContourRegion","title":"Visualising an sf object (for internal use only at the moment) — plotContourRegion","text":"Visualising sf object (internal use moment)","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotContourRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualising an sf object (for internal use only at the moment) — plotContourRegion","text":"","code":"plotContourRegion(   spe,   coi,   id = \"cell_type\",   overlay = c(\"density\", \"cell\"),   sub.level )"},{"path":"https://chenlaboratory.github.io/scider/reference/plotContourRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualising an sf object (for internal use only at the moment) — plotContourRegion","text":"spe SpatialExperiment object. coi character vector length 1 cell type interest. id character. name column colData(spe) containing cell type identifiers. Set cell_type default. overlay Character vector. Either plot overlay density cells. sub.level Numeric vector length 1 2, identifies density level plot. length 1, plot density region level. length 2, plot density region two levels.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotContourRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualising an sf object (for internal use only at the moment) — plotContourRegion","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCorHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot model statistics using heatmap. — plotCorHeatmap","title":"Plot model statistics using heatmap. — plotCorHeatmap","text":"Plot model statistics using heatmap.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCorHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot model statistics using heatmap. — plotCorHeatmap","text":"","code":"plotCorHeatmap(   model.result,   stats = c(\"cor.coef\", \"t\", \"p.Pos\", \"p.Neg\"),   roi = \"all\",   cell.type = \"all\" )"},{"path":"https://chenlaboratory.github.io/scider/reference/plotCorHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot model statistics using heatmap. — plotCorHeatmap","text":"model.result data.frame object. stats Character value. Choose either coefficient t. Coefficient default. roi Character value. default . specific ROIs plotted. cell.type Character value. default . cell types plotted.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCorHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot model statistics using heatmap. — plotCorHeatmap","text":"pheatmap object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotCorHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot model statistics using heatmap. — plotCorHeatmap","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\", \"B cells\", \"T cells\")  spe <- gridDensity(spe, coi = coi)  spe <- findROI(spe, coi = coi, method = \"walktrap\")  model_result <- corDensity(spe)  plotCorHeatmap(model_result)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot density correlation between two cell types — plotDensCor","title":"Plot density correlation between two cell types — plotDensCor","text":"Plot density correlation two cell types","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot density correlation between two cell types — plotDensCor","text":"","code":"plotDensCor(   spe,   celltype1 = NULL,   celltype2 = NULL,   by.roi = TRUE,   fit = c(\"spline\", \"linear\"),   df = 3,   ... )"},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot density correlation between two cell types — plotDensCor","text":"spe SpatialExperiment object. celltype1 Cell type 1 compare. celltype2 Cell type 2 compare. .roi Logical. Plot facet ROIs . fit Character. Options \"spline\" \"linear\". df Integer. Degrees freedom spline fit. Default 3 (.e., cubic spline fit). ... aesthetic mappings pass ggplot2::aes().","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot density correlation between two cell types — plotDensCor","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot density correlation between two cell types — plotDensCor","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\")  spe <- gridDensity(spe, coi = coi)  spe <- findROI(spe, coi = coi, method = \"walktrap\")  plotDensCor(spe, celltype1 = \"Breast cancer\", celltype2 = \"Fibroblasts\")"},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot grid-based density. — plotDensity","title":"Plot grid-based density. — plotDensity","text":"Plot grid-based density.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot grid-based density. — plotDensity","text":"","code":"plotDensity(spe, coi, probs = 0.8)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot grid-based density. — plotDensity","text":"spe SpatialExperiment object. coi character vector cell types interest (COIs). probs Numeric value 0 1, used filtering uninformative grid, default 0.8.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot grid-based density. — plotDensity","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot grid-based density. — plotDensity","text":"","code":"data(\"xenium_bc_spe\")  spe <- gridDensity(spe)  plotDensity(spe, coi = \"Breast cancer\") #> Warning: Removed 44 rows containing missing values (`geom_tile()`).   plotDensity(spe, coi = \"Fibroblasts\") #> Warning: Removed 9 rows containing missing values (`geom_tile()`)."},{"path":"https://chenlaboratory.github.io/scider/reference/plotROI.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ROIs on spatial. — plotROI","title":"Plot ROIs on spatial. — plotROI","text":"Plot ROIs spatial.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotROI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ROIs on spatial. — plotROI","text":"","code":"plotROI(spe, id = \"cell_type\", show.legend = FALSE, ...)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotROI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ROIs on spatial. — plotROI","text":"spe SpatialExperiment object. id Character. name column colData(spe) containing cell type identifiers. Set cell_type default. show.legend Logical. Show legend . ... Aesthetic mappings pass point.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotROI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ROIs on spatial. — plotROI","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotROI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ROIs on spatial. — plotROI","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\")  spe <- gridDensity(spe, coi = coi)  spe <- findROI(spe, coi = coi, method = \"walktrap\", steps = 5)  plotROI(spe, size = 0.3, alpha = 0.2)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotSpatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cells based on spatial coordinates. — plotSpatial","title":"Plot cells based on spatial coordinates. — plotSpatial","text":"Plot cells based spatial coordinates.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotSpatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cells based on spatial coordinates. — plotSpatial","text":"","code":"plotSpatial(spe, reverseY = FALSE, n = 30, ...)"},{"path":"https://chenlaboratory.github.io/scider/reference/plotSpatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cells based on spatial coordinates. — plotSpatial","text":"spe SpatialExperiment object. reverseY Reverse y coordinates. n Integer value. number distinct color generated, default 30. ... Aesthetic mappings pass ggplot2::aes_string().","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotSpatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cells based on spatial coordinates. — plotSpatial","text":"ggplot object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/plotSpatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cells based on spatial coordinates. — plotSpatial","text":"","code":"data(\"xenium_bc_spe\")  plotSpatial(spe, shape = \".\", color = cell_type, size = 0.3, alpha = 0.2)"},{"path":"https://chenlaboratory.github.io/scider/reference/postSelRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge sel_region from the selectRegion function to SpatialExperiment. — postSelRegion","title":"Merge sel_region from the selectRegion function to SpatialExperiment. — postSelRegion","text":"Merge sel_region selectRegion function SpatialExperiment.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/postSelRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge sel_region from the selectRegion function to SpatialExperiment. — postSelRegion","text":"","code":"postSelRegion(spe, sel_region)"},{"path":"https://chenlaboratory.github.io/scider/reference/postSelRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge sel_region from the selectRegion function to SpatialExperiment. — postSelRegion","text":"spe SpatialExperiment object. sel_region dataframe object. Can generated function selectRegion.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/postSelRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge sel_region from the selectRegion function to SpatialExperiment. — postSelRegion","text":"SpatialExperiment object.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/postSelRegion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge sel_region from the selectRegion function to SpatialExperiment. — postSelRegion","text":"","code":"data(\"xenium_bc_spe\")  coi <- c(\"Breast cancer\", \"Fibroblasts\", \"B cells\", \"T cells\")  spe <- gridDensity(spe, coi = coi)  sel_region <- data.frame(     \"node\" = seq(10),     \"node_x\" = seq(10),     \"node_y\" = seq(10) )  spe1 <- postSelRegion(spe, sel_region)"},{"path":"https://chenlaboratory.github.io/scider/reference/scider-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial cell-type inter-correlation by density in R. — scider-package","title":"Spatial cell-type inter-correlation by density in R. — scider-package","text":"scider implements functions analyse spatial transcriptomics data cell type annotations performing cell type correlation via density estimation cell type co-localization via real number distance. Functions include density estimation, statistical modelling visualizations.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/scider-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial cell-type inter-correlation by density in R. — scider-package","text":"scider uses SpatialExperiment objects main infrastructure, can easily integrated wide variety Bioconductor packages.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/scider-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spatial cell-type inter-correlation by density in R. — scider-package","text":"Ning Liu liu.n@wehi.edu.au, Mengbo Li li.@wehi.edu.au, Yunshun Chen yuchen@wehi.edu.au","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/selectRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"Select region of interest from plot — selectRegion","title":"Select region of interest from plot — selectRegion","text":"Select region interest plot","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/selectRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select region of interest from plot — selectRegion","text":"","code":"selectRegion(data, x.col = \"x\", y.col = \"y\")"},{"path":"https://chenlaboratory.github.io/scider/reference/selectRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select region of interest from plot — selectRegion","text":"data data.frame object. x.col Column name x coordinates. y.col Column name y coordinates.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/selectRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select region of interest from plot — selectRegion","text":"data.frame object global environment.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/selectRegion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select region of interest from plot — selectRegion","text":"","code":"data(\"xenium_bc_spe\")  spe_b <- spe[, SummarizedExperiment::colData(spe)$cell_type == \"B cells\"]  dat <- as.data.frame(SpatialExperiment::spatialCoords(spe_b))  # selectRegion(dat, x.col = \"x_centroid\", y.col = \"y_centroid\")"},{"path":"https://chenlaboratory.github.io/scider/reference/spe2PB.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a 'SpatialExperiment' data object, create pseudo-bulk\nsamples using the colData information and return a DGEList object — spe2PB","title":"Given a 'SpatialExperiment' data object, create pseudo-bulk\nsamples using the colData information and return a DGEList object — spe2PB","text":"Given 'SpatialExperiment' data object, create pseudo-bulk samples using colData information return DGEList object","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/spe2PB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a 'SpatialExperiment' data object, create pseudo-bulk\nsamples using the colData information and return a DGEList object — spe2PB","text":"","code":"spe2PB(   spe,   by.group = TRUE,   group.id = \"cell_type\",   by.roi = TRUE,   roi.only = TRUE,   contour = NULL )"},{"path":"https://chenlaboratory.github.io/scider/reference/spe2PB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a 'SpatialExperiment' data object, create pseudo-bulk\nsamples using the colData information and return a DGEList object — spe2PB","text":"spe SpatialExperiment object. .group Logical. Whether perform pseudo-bulking group. TRUE default. group.id Character. column name colData(spe) contains group information. Default 'cell_type'. .roi Logical. Whether perform pseudo-bulking ROI. TRUE default. roi.Logical. Whether filter pseudo-bulk samples formed cells ROIs. TRUE default. contour Character. name group cell type contour level computed. NULL, pseudo-bulking performed based contour level. Default NULL.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/spe2PB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a 'SpatialExperiment' data object, create pseudo-bulk\nsamples using the colData information and return a DGEList object — spe2PB","text":"edgeR::DGEList object library (column) pseudo-bulk sample.","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/spe2PB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given a 'SpatialExperiment' data object, create pseudo-bulk\nsamples using the colData information and return a DGEList object — spe2PB","text":"","code":"data(\"xenium_bc_spe\")  spe <- gridDensity(spe)  coi <- \"Breast cancer\"  spe <- findROI(spe, coi = coi)  spe <- allocateCells(spe) #> Assigning cells to ROIs defined by Breast cancer  #> No contour detected.  y <- spe2PB(spe)"},{"path":"https://chenlaboratory.github.io/scider/reference/xenium_bc_spe.html","id":null,"dir":"Reference","previous_headings":"","what":"Description of the scider example datasets — xenium_bc_spe","title":"Description of the scider example datasets — xenium_bc_spe","text":"scider-package 1 datasets: xenium_bc_spe Example test spatial transcriptomics data SpatialExperiment format. test data randomly subsetting publicly available 10X Xenium breast cancer data. Source data: https://www.10xgenomics.com/resources/datasets/xenium-ffpe-human-breast--custom-add--panel-1-standard","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/xenium_bc_spe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Description of the scider example datasets — xenium_bc_spe","text":"","code":"data(\"xenium_bc_spe\")"},{"path":"https://chenlaboratory.github.io/scider/reference/xenium_bc_spe.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Description of the scider example datasets — xenium_bc_spe","text":"SpatialExperiment object","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/xenium_bc_spe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Description of the scider example datasets — xenium_bc_spe","text":"SpatialExperiment object","code":""},{"path":"https://chenlaboratory.github.io/scider/reference/xenium_bc_spe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Description of the scider example datasets — xenium_bc_spe","text":"","code":"data(xenium_bc_spe)"},{"path":"https://chenlaboratory.github.io/scider/news/index.html","id":"scider-0990","dir":"Changelog","previous_headings":"","what":"scider 0.99.0","title":"scider 0.99.0","text":"First release.","code":""}]
